{"version":3,"sources":["webpack:///../guides-base/src/components/TableOfContents/TableOfContents.jsx","webpack:///../guides-base/src/templates/post.jsx"],"names":["Container","styled","div","media","lessThan","StickyContainer","linkCss","css","theme","colors","darkPurple","props","active","StyledLink","Link","ExternalLinksContainer","lightBlue","ExternalLink","a","grey","TableOfContents","data","current","githubUrl","map","node","fields","slug","to","key","frontmatter","title","href","alt","src","githubLogo","slackLogo","defaultProps","Markdown","sharedStyles","markdown","ContentHeader","h1","fontFamily","contentPageMaxWidth","ContentContainer","PostTemplate","render","this","pageContext","nextslug","nexttitle","prevslug","prevtitle","config","tableOfContents","postNode","markdownRemark","post","id","siteTitle","SEO","postPath","postSEO","Header","dangerouslySetInnerHTML","__html","html","Social","path","siteUrl","NextPrev","nextSlug","nextTitle","prevSlug","prevTitle","Footer","React","Component","pageQuery"],"mappings":"ycAQA,IAAMA,EAAYC,UAAOC,IAAV,iFAAGD,CAAH,yDAIXE,IAAMC,SAAS,QAAfD,CAJW,MASTE,EAAkBJ,UAAOC,IAAV,uFAAGD,CAAH,+BAKfK,EAAUC,cAAH,wHACFC,IAAMC,OAAOC,YACP,SAAAC,GAAK,OAAIA,EAAMC,OAAS,OAAS,YAU5CC,EAAaZ,kBAAOa,QAAV,kFAAGb,CAAH,QACZK,GAGES,EAAyBd,UAAOC,IAAV,8FAAGD,CAAH,gDACFO,IAAMC,OAAOO,WAKjCC,EAAehB,UAAOiB,EAAV,oFAAGjB,CAAH,sFACdK,EAGOE,IAAMC,OAAOU,MAQlBC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACxC,OACE,kBAACvB,EAAD,KACE,kBAACK,EAAD,KACGgB,EAAKG,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACR,kBAACZ,EAAD,CACED,OAAQU,IAAYG,EAAKC,OAAOC,KAChCC,GAAIH,EAAKC,OAAOC,KAChBE,IAAKJ,EAAKK,YAAYC,OAErBN,EAAKK,YAAYC,UAGtB,kBAAChB,EAAD,KACE,kBAACE,EAAD,CAAce,KAAMT,GAClB,yBAAKU,IAAI,SAASC,IAAKC,MADzB,kBAIA,kBAAClB,EAAD,CAAce,KAAK,0BACjB,yBAAKC,IAAI,QAAQC,IAAKE,MADxB,6BAUVhB,EAAgBiB,aAAe,CAC7BhB,KAAM,IAGOD,Q,gJC1Ef,IAAMkB,EAAWrC,UAAOC,IAAV,iEAAGD,CAAH,QACVsC,IAAaC,UAGXC,EAAgBxC,UAAOyC,GAAV,sEAAGzC,CAAH,iEACFO,IAAMmC,WACZnC,IAAMC,OAAOC,YAKlBV,EAAYC,UAAOC,IAAV,kEAAGD,CAAH,mGAEAO,IAAMoC,qBAMfC,EAAmB5C,UAAOC,IAAV,yEAAGD,CAAH,oCAGlBE,IAAMC,SAAS,SAAfD,CAHkB,MAQD2C,E,kGACnBC,OAAA,WAAU,IAAD,EACuBC,KAAKrC,MAA3BU,EADD,EACCA,KAAM4B,EADP,EACOA,YACNtB,EAAiFsB,EAAjFtB,KAAMuB,EAA2ED,EAA3EC,SAAUC,EAAiEF,EAAjEE,UAAWC,EAAsDH,EAAtDG,SAAUC,EAA4CJ,EAA5CI,UAFtC,EAEkFJ,EAAjCK,cAFjD,MAE0D,GAF1D,EAE8DC,EAAoBN,EAApBM,gBAC/DC,EAAWnC,EAAKoC,eAChBC,EAAOF,EAAS1B,YAItB,OAHK4B,EAAKC,KACRD,EAAKC,GAAKhC,GAGV,kBAAC,IAAD,CAAQ2B,OAAQA,GACd,kBAAC,IAAD,KACE,+BAAWI,EAAK3B,MAAhB,MAA2BuB,EAAOM,YAEpC,kBAACC,EAAA,EAAD,CAAKP,OAAQA,EAAQQ,SAAUnC,EAAM6B,SAAUA,EAAUO,SAAO,IAChE,kBAACC,EAAA,EAAD,CAAQzC,UAAW+B,EAAO/B,YAC1B,kBAAC,EAAD,KACE,kBAACsB,EAAD,KACE,kBAACJ,EAAD,KAAgBiB,EAAK3B,OACrB,kBAACO,EAAD,CAAU2B,wBAAyB,CAAEC,OAAQV,EAASW,QACtD,kBAACC,EAAA,EAAD,CACEC,KAAM1C,EACNI,MAAO2B,EAAK3B,MACZuC,QAAShB,EAAOgB,QAChBV,UAAWN,EAAOM,aAGtB,kBAAC,EAAD,CAAiBtC,QAASK,EAAMN,KAAMkC,EAAiBhC,UAAW+B,EAAO/B,aAE3E,kBAACgD,EAAA,EAAD,CACEC,SAAUtB,EACVuB,UAAWtB,EACXuB,SAAUtB,EACVuB,UAAWtB,IAEb,kBAACuB,EAAA,EAAD,Q,GAnCkCC,IAAMC,WA0CnCC,EAAS","file":"component---guides-base-src-templates-post-jsx-0acf2807a366b6f023fc.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled, { css } from 'styled-components'\nimport media from \"styled-media-query\";\nimport theme from '../../theme';\nimport githubLogo from '../Header/github-logo.svg'\nimport slackLogo from '../Header/slack-logo.svg'\n\nconst Container = styled.div`\n  margin-top: 93px;\n  min-width: 200px;\n  margin-left: 30px;\n  ${media.lessThan(\"small\")`\n    display: none;\n  `}\n`\n\nconst StickyContainer = styled.div`\n  position: sticky;\n  top: 50px;\n`\n\nconst linkCss = css`\n  color: ${theme.colors.darkPurple};\n  font-weight: ${props => props.active ? \"bold\" : \"normal\"};\n  text-decoration: none;\n  margin-bottom: 20px;\n  display: block;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  ${linkCss}\n`\n\nconst ExternalLinksContainer = styled.div`\n  border-top: 1px solid ${theme.colors.lightBlue};\n  padding-top: 20px;\n}\n`\n\nconst ExternalLink = styled.a`\n  ${linkCss}\n  display: flex;\n  align-items: center;\n  color: ${theme.colors.grey};\n\n  img {\n    height: 20px;\n    margin-right: 12px;\n  }\n`\n\nconst TableOfContents = ({ data, current, githubUrl }) => {\n  return (\n    <Container>\n      <StickyContainer>\n        {data.map(({ node }) => (\n          <StyledLink\n            active={current === node.fields.slug}\n            to={node.fields.slug}\n            key={node.frontmatter.title}\n          >\n            {node.frontmatter.title}\n          </StyledLink>\n        ))}\n        <ExternalLinksContainer>\n          <ExternalLink href={githubUrl}>\n            <img alt=\"github\" src={githubLogo} />\n            Edit on Github\n          </ExternalLink>\n          <ExternalLink href=\"https://slack.cube.dev\">\n            <img alt=\"slack\" src={slackLogo} />\n            Ask Question in Slack\n          </ExternalLink>\n        </ExternalLinksContainer>\n      </StickyContainer>\n    </Container>\n  )\n};\n\nTableOfContents.defaultProps = {\n  data: []\n}\n\nexport default TableOfContents;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport styled from 'styled-components'\nimport media from \"styled-media-query\";\nimport theme, { sharedStyles } from '../theme';\nimport Layout from \"../layout\";\nimport SEO from \"../components/SEO/SEO\";\nimport TableOfContents from \"../components/TableOfContents/TableOfContents\";\nimport Header from \"../components/Header/Header\";\nimport Footer from \"../components/Footer/Footer\";\nimport NextPrev from \"../components/NextPrev/NextPrev\";\nimport Social from \"../components/Social/Social\";\n\nconst Markdown = styled.div`\n  ${sharedStyles.markdown}\n`;\n\nconst ContentHeader = styled.h1`\n  font-family: ${theme.fontFamily};\n  color: ${theme.colors.darkPurple};\n  font-size: 32px;\n  margin-bottom: 35px;\n`;\n\nconst Container = styled.div`\n  padding: 92px 30px 30px;\n  max-width: ${theme.contentPageMaxWidth};\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ContentContainer = styled.div`\n  min-width: 0;\n  max-width: 680px;\n  ${media.lessThan(\"medium\")`\n    max-width: 400px;\n  `}\n`\n\nexport default class PostTemplate extends React.Component {\n  render() {\n    const { data, pageContext } = this.props;\n    const { slug, nextslug, nexttitle, prevslug, prevtitle, config = {}, tableOfContents } = pageContext;\n    const postNode = data.markdownRemark;\n    const post = postNode.frontmatter;\n    if (!post.id) {\n      post.id = slug;\n    }\n    return (\n      <Layout config={config}>\n        <Helmet>\n          <title>{`${post.title} | ${config.siteTitle}`}</title>\n        </Helmet>\n        <SEO config={config} postPath={slug} postNode={postNode} postSEO />\n        <Header githubUrl={config.githubUrl} />\n        <Container>\n          <ContentContainer>\n            <ContentHeader>{post.title}</ContentHeader>\n            <Markdown dangerouslySetInnerHTML={{ __html: postNode.html }} />\n            <Social\n              path={slug}\n              title={post.title}\n              siteUrl={config.siteUrl}\n              siteTitle={config.siteTitle}\n            />\n          </ContentContainer>\n          <TableOfContents current={slug} data={tableOfContents} githubUrl={config.githubUrl} />\n        </Container>\n        <NextPrev\n          nextSlug={nextslug}\n          nextTitle={nexttitle}\n          prevSlug={prevslug}\n          prevTitle={prevtitle}\n        />\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}