// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Jinja render 01.yml.jinja: 01.yml.jinja 1`] = `
"cubes:
  - name: cube_01_1
    sql: >
      SELECT
        order_id,
        SUM(CASE WHEN payment_method = 'bank_transfer' THEN amount END) AS bank_transfer_amount,
        SUM(CASE WHEN payment_method = 'credit_card' THEN amount END) AS credit_card_amount,
        SUM(CASE WHEN payment_method = 'gift_card' THEN amount END) AS gift_card_amount,
        SUM(amount) AS total_amount
      FROM app_data.payments
      GROUP BY 1
      
  - name: cube_01_2
    sql: >
      SELECT
        order_id,
        SUM(CASE WHEN payment_method = 'bank_transfer' THEN amount END) AS bank_transfer_amount,
        SUM(CASE WHEN payment_method = 'credit_card' THEN amount END) AS credit_card_amount,
        SUM(CASE WHEN payment_method = 'gift_card' THEN amount END) AS gift_card_amount
      FROM app_data.payments
      GROUP BY 1"
`;

exports[`Jinja render 02.yml.jinja: 02.yml.jinja 1`] = `
"cubes:
  - name: cube_02
    sql: >
      SELECT
        referrer_prop.value AS referrer
        href_prop.value AS href
        host_prop.value AS host
        pathname_prop.value AS pathname
        search_prop.value AS search
      FROM public.events
      LEFT JOIN UNNEST(properties) AS referrer_prop ON referrer_prop.key = 'referrer'
      LEFT JOIN UNNEST(properties) AS href_prop ON href_prop.key = 'href'
      LEFT JOIN UNNEST(properties) AS host_prop ON host_prop.key = 'host'
      LEFT JOIN UNNEST(properties) AS pathname_prop ON pathname_prop.key = 'pathname'
      LEFT JOIN UNNEST(properties) AS search_prop ON search_prop.key = 'search'"
`;

exports[`Jinja render 03.yml.jinja: 03.yml.jinja 1`] = `
"

cubes:
  - name: cube_03
    sql: >
      SELECT 
        *,
        'au' as country
      FROM au_orders
      
      UNION ALL
      
      SELECT 
        *,
        'us' as country
      FROM us_orders
      "
`;

exports[`Jinja render 04.yml.jinja: 04.yml.jinja 1`] = `
"

cubes:
  - name: cube_04_base_events
    sql: >
      SELECT *
      FROM public.events
      WHERE
        {FILTER_PARAMS.cube_04_base_events.timestamp.filter('timestamp')} AND 
        {FILTER_PARAMS.cube_04_product_purchases.timestamp.filter('timestamp')} AND 
        {FILTER_PARAMS.cube_04_page_views.timestamp.filter('timestamp')}

    dimensions:
      - name: timestamp
        sql: timestamp
        type: time
  
  - name: cube_04_product_purchases
    extends: base_events
    sql_table: public.events

    dimensions:
      - name: timestamp
        sql: timestamp
        type: time
  
  - name: cube_04_page_views
    extends: base_events
    sql_table: public.events

    dimensions:
      - name: timestamp
        sql: timestamp
        type: time
  "
`;

exports[`Jinja render 05.yml.jinja: 05.yml.jinja 1`] = `
"

cubes:
  - name: cube_05
    sql_table: public.orders

    measures:
      - name: day
        type: count_distinct
        sql: user_id
        rolling_window:
          trailing: 1 day
          offset: start
      
      - name: mau
        type: count_distinct
        sql: user_id
        rolling_window:
          trailing: 30 day
          offset: start
      
      - name: wau
        type: count_distinct
        sql: user_id
        rolling_window:
          trailing: 7 day
          offset: start
      "
`;

exports[`Jinja render 06.yml.jinja: 06.yml.jinja 1`] = `
"cubes:
  - name: cube_06
    sql_table: public.orders

    dimensions:
      - name: id
        sql: id
        type: number
        primary_key: true
        
      - name: status
        sql: status
        type: string
        
      - name: created_at
        sql: created_at
        type: time
        
      - name: completed_at
        sql: completed_at
        type: time
        "
`;

exports[`Jinja render 07.yml.jinja: 07.yml.jinja 1`] = `
"cubes:
  - name: cube_07
    sql: >
      SELECT
        id AS payment_id,
        (amount / 100)::NUMERIC(16, 2) AS amount_usd,
        ((order_selling_price - order_cost_price) / order_cost_price) AS markup
      FROM app_data.payments"
`;

exports[`Jinja render 08.yml.jinja: 08.yml.jinja 1`] = `
"{ cubes:
  - name: cube_08
    sql_table: public.orders
    data_source: postgres }"
`;

exports[`Jinja render arguments-test.yml.jinja: arguments-test.yml.jinja 1`] = `
"test:
  arg_sum_integers_int_int: 2
  arg_sum_integers_int_float: 4.140000000000001
  arg_bool_true: 1
  arg_bool_false: 0
  arg_str: hello world
  arg_null: none"
`;

exports[`Jinja render data-model.yml.jinja: data-model.yml.jinja 1`] = `
"cubes:

  - name: cube_from_api
    measures:
      - name: count
        type: count
      - name: total
        type: sum
        sql: amount

  - name: cube_from_api_with_dimensions
    measures:
      - name: active_users
        type: count_distinct
        sql: user_id
    dimensions:
      - name: city
        type: string
        sql: city_column"
`;

exports[`Jinja render dump_context.yml.jinja: dump_context.yml.jinja 1`] = `
"<pre></pre>

print:
  bool_true: true
  bool_false: false
  string: test string
  int: 1
  float: 3.1415
  array_int: [9, 8, 7, 6, 5, 0, 1, 2, 3, 4]
  array_bool: [true, false, false, true]
  null: none
  undefined: none
  security_context:
    userId: 1
  env_var:
    exist: test
    unknown_fallback: value"
`;

exports[`Jinja render template_error.jinja: template_error.jinja 1`] = `
[Error: syntax error: unknown statement unexpected_block_name (in template_error.jinja:10)
-------------------------------------------------------------------------------
   7 | 7
   8 | {%- for country in countries %}
   9 | 9
  10 > {%- unexpected_block_name %}
     i ^^^^^^^^^^^^^^^^^^^^^^^^ syntax error
  11 | 11
  12 | 12
  13 | 13

-------------------------------------------------------------------------------]
`;
