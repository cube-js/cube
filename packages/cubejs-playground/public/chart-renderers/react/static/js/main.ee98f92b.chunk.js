(this["webpackJsonpreact-charts"]=this["webpackJsonpreact-charts"]||[]).push([[0],{642:function(t,e,n){},789:function(t,e,n){},938:function(t,e,n){"use strict";n.r(e);var r={};n.r(r),n.d(r,"getChartComponent",(function(){return b})),n.d(r,"getCommon",(function(){return g})),n.d(r,"getImports",(function(){return C}));var a={};n.r(a),n.d(a,"getChartComponent",(function(){return y})),n.d(a,"getCommon",(function(){return x})),n.d(a,"getImports",(function(){return v}));var s={};n.r(s),n.d(s,"getChartComponent",(function(){return O})),n.d(s,"getCommon",(function(){return k})),n.d(s,"getImports",(function(){return R}));var i={};n.r(i),n.d(i,"getChartComponent",(function(){return w})),n.d(i,"getCommon",(function(){return F})),n.d(i,"getImports",(function(){return P}));var o=n(0),l=n.n(o),c=n(30),u=n.n(c),d=(n(642),n(24)),p=n(538),m=n(268),f=(n(788),n(789),n(541)),h=["import React from 'react';","import { Chart, Axis, Tooltip, Geom, PieChart } from 'bizcharts';","import { Row, Col, Statistic, Table } from 'antd';","import { useDeepMemo } from '../../../hooks';"];function b(t){return"line"===t?"return <LineChartRenderer resultSet={resultSet} />;\n":"bar"===t?"return <BarChartRenderer resultSet={resultSet} />;\n":"area"===t?"return <AreaChartRenderer resultSet={resultSet} />;\n":"pie"===t?"return <PieChartRenderer resultSet={resultSet} />;\n":"number"===t?'return (\n  <Row\n    type="flex"\n    justify="center"\n    align="middle"\n    style={{\n      height: \'100%\',\n    }}\n  >\n    <Col>\n      {resultSet.seriesNames().map((s) => (\n        <Statistic value={resultSet.totalRow()[s.key]} />\n      ))}\n    </Col>\n  </Row>\n);\n':"height"===t?"":"table"===t?"return <TableRenderer resultSet={resultSet} pivotConfig={pivotConfig} />;\n":void 0}function g(){return'const stackedChartData = (resultSet) => {\n  const data = resultSet\n    .pivot()\n    .map(({ xValues, yValuesArray }) =>\n      yValuesArray.map(([yValues, m]) => ({\n        x: resultSet.axisValuesString(xValues, \', \'),\n        color: resultSet.axisValuesString(yValues, \', \'),\n        measure: m && Number.parseFloat(m),\n      }))\n    )\n    .reduce((a, b) => a.concat(b), []);\n  return data;\n};\n\nconst LineChartRenderer = ({ resultSet }) => {\n  const data = useDeepMemo(() => stackedChartData(resultSet), [resultSet]);\n  return (\n    <Chart\n      scale={{\n        x: {\n          tickCount: 8,\n        },\n      }}\n      autoFit\n      height={400}\n      data={data}\n      forceFit\n    >\n      <Axis name="x" />\n      <Axis name="measure" />\n      <Tooltip\n        crosshairs={{\n          type: \'y\',\n        }}\n      />\n      <Geom type="line" position="x*measure" size={2} color="color" />\n    </Chart>\n  );\n};\n\nconst BarChartRenderer = ({ resultSet }) => {\n  const data = useDeepMemo(() => stackedChartData(resultSet), [\n    resultSet.serialize(),\n  ]);\n  return (\n    <Chart\n      scale={{\n        x: {\n          tickCount: 8,\n        },\n      }}\n      autoFit\n      height={400}\n      data={data}\n      forceFit\n    >\n      <Axis name="x" />\n      <Axis name="measure" />\n      <Tooltip />\n      <Geom type="interval" position="x*measure" color="color" />\n    </Chart>\n  );\n};\n\nconst AreaChartRenderer = ({ resultSet }) => {\n  const data = useDeepMemo(() => stackedChartData(resultSet), [\n    resultSet.serialize(),\n  ]);\n  return (\n    <Chart\n      scale={{\n        x: {\n          tickCount: 8,\n        },\n      }}\n      autoFit\n      height={400}\n      data={data}\n      forceFit\n    >\n      <Axis name="x" />\n      <Axis name="measure" />\n      <Tooltip\n        crosshairs={{\n          type: \'y\',\n        }}\n      />\n      <Geom\n        type="area"\n        adjust="stack"\n        position="x*measure"\n        size={2}\n        color="color"\n      />\n    </Chart>\n  );\n};\n\nconst PieChartRenderer = ({ resultSet }) => {\n  const [data, angleField] = useDeepMemo(() => {\n    return [resultSet.chartPivot(), resultSet.series()];\n  }, [resultSet]);\n  return (\n    <PieChart\n      data={data}\n      radius={0.8}\n      angleField={angleField[0].key}\n      colorField="x"\n      label={{\n        visible: true,\n        offset: 20,\n      }}\n      legend={{\n        position: \'bottom\',\n      }}\n    />\n  );\n};\n\nconst TableRenderer = ({ resultSet, pivotConfig }) => {\n  const [tableColumns, dataSource] = useDeepMemo(() => {\n    return [\n      resultSet.tableColumns(pivotConfig),\n      resultSet.tablePivot(pivotConfig),\n    ];\n  }, [resultSet, pivotConfig]);\n  return (\n    <Table pagination={false} columns={tableColumns} dataSource={dataSource} />\n  );\n};\n'}function C(){return h}var j=["import React from 'react';","import { CartesianGrid, PieChart, Pie, Cell, AreaChart, Area, XAxis, YAxis, Tooltip, ResponsiveContainer, Legend, BarChart, Bar, LineChart, Line } from 'recharts';","import { Row, Col, Statistic, Table } from 'antd';"];function y(t){return"line"===t?'return (\n  <CartesianChart resultSet={resultSet} ChartComponent={LineChart}>\n    {resultSet.seriesNames().map((series, i) => (\n      <Line\n        key={series.key}\n        stackId="a"\n        dataKey={series.key}\n        name={series.title}\n        stroke={colors[i]}\n      />\n    ))}\n  </CartesianChart>\n);\n':"bar"===t?'return (\n  <CartesianChart resultSet={resultSet} ChartComponent={BarChart}>\n    {resultSet.seriesNames().map((series, i) => (\n      <Bar\n        key={series.key}\n        stackId="a"\n        dataKey={series.key}\n        name={series.title}\n        fill={colors[i]}\n      />\n    ))}\n  </CartesianChart>\n);\n':"area"===t?'return (\n  <CartesianChart resultSet={resultSet} ChartComponent={AreaChart}>\n    {resultSet.seriesNames().map((series, i) => (\n      <Area\n        key={series.key}\n        stackId="a"\n        dataKey={series.key}\n        name={series.title}\n        stroke={colors[i]}\n        fill={colors[i]}\n      />\n    ))}\n  </CartesianChart>\n);\n':"pie"===t?'return (\n  <ResponsiveContainer width="100%" height={350}>\n    <PieChart>\n      <Pie\n        isAnimationActive={false}\n        data={resultSet.chartPivot()}\n        nameKey="x"\n        dataKey={resultSet.seriesNames()[0].key}\n        fill="#8884d8"\n      >\n        {resultSet.chartPivot().map((e, index) => (\n          <Cell key={index} fill={colors[index % colors.length]} />\n        ))}\n      </Pie>\n      <Legend />\n      <Tooltip />\n    </PieChart>\n  </ResponsiveContainer>\n);\n':"number"===t?'return (\n  <Row\n    type="flex"\n    justify="center"\n    align="middle"\n    style={{\n      height: \'100%\',\n    }}\n  >\n    <Col>\n      {resultSet.seriesNames().map((s) => (\n        <Statistic value={resultSet.totalRow()[s.key]} />\n      ))}\n    </Col>\n  </Row>\n);\n':"height"===t?"":"table"===t?"return (\n  <Table\n    pagination={false}\n    columns={resultSet.tableColumns(pivotConfig)}\n    dataSource={resultSet.tablePivot(pivotConfig)}\n  />\n);\n":void 0}function x(){return"const CartesianChart = ({ resultSet, children, ChartComponent }) => (\n  <ResponsiveContainer width=\"100%\" height={350}>\n    <ChartComponent data={resultSet.chartPivot()}>\n      <XAxis dataKey=\"x\" />\n      <YAxis />\n      <CartesianGrid />\n      {children}\n      <Legend />\n      <Tooltip />\n    </ChartComponent>\n  </ResponsiveContainer>\n);\n\nconst colors = ['#FF6492', '#141446', '#7A77FF'];\n\nconst stackedChartData = (resultSet) => {\n  const data = resultSet\n    .pivot()\n    .map(({ xValues, yValuesArray }) =>\n      yValuesArray.map(([yValues, m]) => ({\n        x: resultSet.axisValuesString(xValues, ', '),\n        color: resultSet.axisValuesString(yValues, ', '),\n        measure: m && Number.parseFloat(m),\n      }))\n    )\n    .reduce((a, b) => a.concat(b), []);\n  return data;\n};\n"}function v(){return j}var S=["import React from 'react';","import { Line, Bar, Pie } from 'react-chartjs-2';","import { Row, Col, Statistic, Table } from 'antd';"];function O(t){return"line"===t?"const data = {\n  labels: resultSet.categories().map((c) => c.category),\n  datasets: resultSet.series().map((s, index) => ({\n    label: s.title,\n    data: s.series.map((r) => r.value),\n    borderColor: COLORS_SERIES[index],\n    fill: false,\n  })),\n};\nconst options = { ...commonOptions };\nreturn <Line data={data} options={options} />;\n":"labels"===t||"datasets"===t||"label"===t||"data"===t||"borderColor"===t||"fill"===t?"":"bar"===t?"const data = {\n  labels: resultSet.categories().map((c) => c.category),\n  datasets: resultSet.series().map((s, index) => ({\n    label: s.title,\n    data: s.series.map((r) => r.value),\n    backgroundColor: COLORS_SERIES[index],\n    fill: false,\n  })),\n};\nconst options = {\n  ...commonOptions,\n  scales: {\n    xAxes: [\n      {\n        stacked: true,\n      },\n    ],\n  },\n};\nreturn <Bar data={data} options={options} />;\n":"labels"===t||"datasets"===t||"label"===t||"data"===t||"backgroundColor"===t||"fill"===t||"scales"===t||"xAxes"===t||"stacked"===t?"":"area"===t?"const data = {\n  labels: resultSet.categories().map((c) => c.category),\n  datasets: resultSet.series().map((s, index) => ({\n    label: s.title,\n    data: s.series.map((r) => r.value),\n    backgroundColor: COLORS_SERIES[index],\n  })),\n};\nconst options = {\n  ...commonOptions,\n  scales: {\n    yAxes: [\n      {\n        stacked: true,\n      },\n    ],\n  },\n};\nreturn <Line data={data} options={options} />;\n":"labels"===t||"datasets"===t||"label"===t||"data"===t||"backgroundColor"===t||"scales"===t||"yAxes"===t||"stacked"===t?"":"pie"===t?"const data = {\n  labels: resultSet.categories().map((c) => c.category),\n  datasets: resultSet.series().map((s) => ({\n    label: s.title,\n    data: s.series.map((r) => r.value),\n    backgroundColor: COLORS_SERIES,\n    hoverBackgroundColor: COLORS_SERIES,\n  })),\n};\nconst options = { ...commonOptions };\nreturn <Pie data={data} options={options} />;\n":"labels"===t||"datasets"===t||"label"===t||"data"===t||"backgroundColor"===t||"hoverBackgroundColor"===t?"":"number"===t?'return (\n  <Row\n    type="flex"\n    justify="center"\n    align="middle"\n    style={{\n      height: \'100%\',\n    }}\n  >\n    <Col>\n      {resultSet.seriesNames().map((s) => (\n        <Statistic value={resultSet.totalRow()[s.key]} />\n      ))}\n    </Col>\n  </Row>\n);\n':"height"===t?"":"table"===t?"return (\n  <Table\n    pagination={false}\n    columns={resultSet.tableColumns(pivotConfig)}\n    dataSource={resultSet.tablePivot(pivotConfig)}\n  />\n);\n":void 0}function k(){return"const COLORS_SERIES = ['#FF6492', '#141446', '#7A77FF'];\nconst commonOptions = {\n  maintainAspectRatio: false,\n};\n"}function R(){return S}var A=["import React from 'react';","import * as d3 from 'd3';","import { Row, Col, Statistic, Table } from 'antd';"];function w(t){return"line"===t?'return <D3Chart type="line" {...props} />;\n':"bar"===t?'return <D3Chart type="bar" {...props} />;\n':"area"===t?'return <D3Chart type="area" {...props} />;\n':"pie"===t?'return <D3Chart type="pie" {...props} />;\n':"number"===t?'return (\n  <Row\n    type="flex"\n    justify="center"\n    align="middle"\n    style={{\n      height: \'100%\',\n    }}\n  >\n    <Col>\n      {resultSet.seriesNames().map((s) => (\n        <Statistic value={resultSet.totalRow()[s.key]} />\n      ))}\n    </Col>\n  </Row>\n);\n':"height"===t?"":"table"===t?"return (\n  <Table\n    pagination={false}\n    columns={resultSet.tableColumns(pivotConfig)}\n    dataSource={resultSet.tablePivot(pivotConfig)}\n  />\n);\n":void 0}function F(){return"const COLORS_SERIES = [\n  '#7A77FF',\n  '#141446',\n  '#FF6492',\n  '#727290',\n  '#43436B',\n  '#BEF3BE',\n  '#68B68C',\n  '#FFE7AA',\n  '#B2A58D',\n  '#64C8E0',\n];\nconst CHART_HEIGHT = 300;\n\nconst drawPieChart = (node, resultSet, options) => {\n  const data = resultSet.series()[0].series.map((s) => s.value);\n  const data_ready = d3.pie()(data);\n  d3.select(node).html(''); // The radius of the pieplot is half the width or half the height (smallest one).\n\n  const radius = CHART_HEIGHT / 2 - 40; // Seprate container to center align pie chart\n\n  const svg = d3\n    .select(node)\n    .append('svg')\n    .attr('width', node.clientWidth)\n    .attr('height', CHART_HEIGHT)\n    .append('g')\n    .attr(\n      'transform',\n      'translate(' + node.clientWidth / 2 + ',' + CHART_HEIGHT / 2 + ')'\n    );\n  svg\n    .selectAll('pieArcs')\n    .data(data_ready)\n    .enter()\n    .append('path')\n    .attr('d', d3.arc().innerRadius(0).outerRadius(radius))\n    .attr('fill', (d) => COLORS_SERIES[d.index]);\n  const size = 12;\n  const labels = resultSet.series()[0].series.map((s) => s.x);\n  svg\n    .selectAll('myrect')\n    .data(labels)\n    .enter()\n    .append('rect')\n    .attr('x', 150)\n    .attr('y', function (d, i) {\n      return -50 + i * (size + 5);\n    })\n    .attr('width', size)\n    .attr('height', size)\n    .style('fill', (d, i) => COLORS_SERIES[i]);\n  svg\n    .selectAll('mylabels')\n    .data(labels)\n    .enter()\n    .append('text')\n    .attr('x', 150 + size * 1.2)\n    .attr('y', function (d, i) {\n      return -50 + i * (size + 5) + size / 2;\n    })\n    .text(function (d) {\n      return d;\n    })\n    .attr('text-anchor', 'left')\n    .attr('font-size', '12px')\n    .style('alignment-baseline', 'middle');\n};\n\nconst drawChart = (node, resultSet, chartType, options = {}) => {\n  if (chartType === 'pie') {\n    return drawPieChart(node, resultSet, options);\n  }\n\n  const margin = {\n      top: 10,\n      right: 30,\n      bottom: 30,\n      left: 60,\n    },\n    width = node.clientWidth - margin.left - margin.right,\n    height = CHART_HEIGHT - margin.top - margin.bottom;\n  d3.select(node).html('');\n  const svg = d3\n    .select(node)\n    .append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n  const keys = resultSet.seriesNames(options.pivotConfig).map((s) => s.key);\n  let data, maxData;\n\n  if (chartType === 'line') {\n    data = resultSet.series(options.pivotConfig).map((series) => ({\n      key: series.key,\n      values: series.series,\n    }));\n    maxData = d3.max(data.map((s) => d3.max(s.values, (i) => i.value)));\n  } else {\n    data = d3.stack().keys(keys)(resultSet.chartPivot(options.pivotConfig));\n    maxData = d3.max(data.map((s) => d3.max(s, (i) => i[1])));\n  }\n\n  const color = d3.scaleOrdinal().domain(keys).range(COLORS_SERIES);\n  let x;\n\n  if (chartType === 'bar') {\n    x = d3\n      .scaleBand()\n      .range([0, width])\n      .domain(resultSet.chartPivot(options.pivotConfig).map((c) => c.x))\n      .padding(0.3);\n  } else {\n    x = d3\n      .scaleTime()\n      .domain(\n        d3.extent(resultSet.chartPivot(options.pivotConfig), (c) =>\n          d3.isoParse(c.x)\n        )\n      )\n      .nice()\n      .range([0, width]);\n  }\n\n  svg\n    .append('g')\n    .attr('transform', 'translate(0,' + height + ')')\n    .call(d3.axisBottom(x));\n  const y = d3.scaleLinear().domain([0, maxData]).range([height, 0]);\n  svg.append('g').call(d3.axisLeft(y));\n\n  if (chartType === 'line') {\n    svg\n      .selectAll('.line')\n      .data(data)\n      .enter()\n      .append('path')\n      .attr('fill', 'none')\n      .attr('stroke', (d) => color(d.key))\n      .attr('stroke-width', 1.5)\n      .attr('d', (d) => {\n        return d3\n          .line()\n          .x((d) => x(d3.isoParse(d.x)))\n          .y((d) => y(+d.value))(d.values);\n      });\n  } else if (chartType === 'area') {\n    svg\n      .selectAll('mylayers')\n      .data(data)\n      .enter()\n      .append('path')\n      .style('fill', (d) => color(d.key))\n      .attr(\n        'd',\n        d3\n          .area()\n          .x((d) => x(d3.isoParse(d.data.x)))\n          .y0((d) => y(d[0]))\n          .y1((d) => y(d[1]))\n      );\n  } else {\n    svg\n      .append('g')\n      .selectAll('g') // Enter in the stack data = loop key per key = group per group\n      .data(data)\n      .enter()\n      .append('g')\n      .attr('fill', (d) => color(d.key))\n      .selectAll('rect') // enter a second time = loop subgroup per subgroup to add all rectangles\n      .data((d) => d)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.data.x))\n      .attr('y', (d) => y(d[1]))\n      .attr('height', (d) => y(d[0]) - y(d[1]))\n      .attr('width', x.bandwidth());\n  }\n};\n\nconst D3Chart = ({ resultSet, type, ...props }) => (\n  <div ref={(el) => el && drawChart(el, resultSet, type, props)} />\n);\n"}function P(){return A}var E={bizchartsCharts:r,rechartsCharts:a,chartjsCharts:s,d3Charts:i},T=["react-dom",["@cubejs-client/core","^0.27.26"],["@cubejs-client/react","^0.27.30"],"antd"];var L=n(8),I=function(t){var e=t.renderFunction,n=t.query,r=t.pivotConfig,a=t.refetchCounter,s=window.parent.window.__cubejsPlayground||{},i=s.onQueryStart,l=s.onQueryLoad,c=s.onQueryProgress,u=Object(m.b)(n),d=u.isLoading,p=u.error,f=u.resultSet,h=u.progress,b=u.refetch;return Object(o.useEffect)((function(){d&&"function"===typeof i&&i()}),[d]),Object(o.useEffect)((function(){a>0&&b()}),[a]),Object(o.useEffect)((function(){d||"function"!==typeof l||l({resultSet:f,error:p}),"function"===typeof c&&c(h)}),[p,d,f,h]),!f||p?null:e({resultSet:f,pivotConfig:r})},B=function(t){var e=t.renderFunction,n=t.query,r=t.pivotConfig,a=void 0===r?null:r,s=t.refetchCounter;return Object(L.jsx)(I,{renderFunction:e,query:n,pivotConfig:a,refetchCounter:s})},_=n(75),D=n(544),N=n(40),z=n(949),V=n(950),H=n(946),G=n(945),K=["resultSet","type"],M=["#7A77FF","#141446","#FF6492","#727290","#43436B","#BEF3BE","#68B68C","#FFE7AA","#B2A58D","#64C8E0"],q=300,W=function(t,e,n){var r=e.series()[0].series.map((function(t){return t.value})),a=N.i()(r);N.n(t).html("");var s=N.n(t).append("svg").attr("width",t.clientWidth).attr("height",q).append("g").attr("transform","translate("+t.clientWidth/2+",150)");s.selectAll("pieArcs").data(a).enter().append("path").attr("d",N.a().innerRadius(0).outerRadius(110)).attr("fill",(function(t){return M[t.index]}));var i=12,o=e.series()[0].series.map((function(t){return t.x}));s.selectAll("myrect").data(o).enter().append("rect").attr("x",150).attr("y",(function(t,e){return 17*e-50})).attr("width",i).attr("height",i).style("fill",(function(t,e){return M[e]})),s.selectAll("mylabels").data(o).enter().append("text").attr("x",164.4).attr("y",(function(t,e){return 17*e-50+6})).text((function(t){return t})).attr("text-anchor","left").attr("font-size","12px").style("alignment-baseline","middle")},Q=function(t){var e=t.resultSet,n=t.type,r=Object(D.a)(t,K);return Object(L.jsx)("div",{ref:function(t){return t&&function(t,e,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if("pie"===n)return W(t,e);var a={top:10,right:30,bottom:30,left:60},s=t.clientWidth-a.left-a.right,i=q-a.top-a.bottom;N.n(t).html("");var o,l,c=N.n(t).append("svg").attr("width",s+a.left+a.right).attr("height",i+a.top+a.bottom).append("g").attr("transform","translate("+a.left+","+a.top+")"),u=e.seriesNames(r.pivotConfig).map((function(t){return t.key}));"line"===n?(o=e.series(r.pivotConfig).map((function(t){return{key:t.key,values:t.series}})),l=N.h(o.map((function(t){return N.h(t.values,(function(t){return t.value}))})))):(o=N.o().keys(u)(e.chartPivot(r.pivotConfig)),l=N.h(o.map((function(t){return N.h(t,(function(t){return t[1]}))}))));var d,p=N.l().domain(u).range(M);d="bar"===n?N.j().range([0,s]).domain(e.chartPivot(r.pivotConfig).map((function(t){return t.x}))).padding(.3):N.m().domain(N.e(e.chartPivot(r.pivotConfig),(function(t){return N.f(t.x)}))).nice().range([0,s]),c.append("g").attr("transform","translate(0,"+i+")").call(N.c(d));var m=N.k().domain([0,l]).range([i,0]);c.append("g").call(N.d(m)),"line"===n?c.selectAll(".line").data(o).enter().append("path").attr("fill","none").attr("stroke",(function(t){return p(t.key)})).attr("stroke-width",1.5).attr("d",(function(t){return N.g().x((function(t){return d(N.f(t.x))})).y((function(t){return m(+t.value)}))(t.values)})):"area"===n?c.selectAll("mylayers").data(o).enter().append("path").style("fill",(function(t){return p(t.key)})).attr("d",N.b().x((function(t){return d(N.f(t.data.x))})).y0((function(t){return m(t[0])})).y1((function(t){return m(t[1])}))):c.append("g").selectAll("g").data(o).enter().append("g").attr("fill",(function(t){return p(t.key)})).selectAll("rect").data((function(t){return t})).enter().append("rect").attr("x",(function(t){return d(t.data.x)})).attr("y",(function(t){return m(t[1])})).attr("height",(function(t){return m(t[0])-m(t[1])})).attr("width",d.bandwidth())}(t,e,n,r)}})},U={line:function(t){return Object(L.jsx)(Q,Object(_.a)({type:"line"},t))},bar:function(t){return Object(L.jsx)(Q,Object(_.a)({type:"bar"},t))},area:function(t){return Object(L.jsx)(Q,Object(_.a)({type:"area"},t))},pie:function(t){return Object(L.jsx)(Q,Object(_.a)({type:"pie"},t))},number:function(t){var e=t.resultSet;return Object(L.jsx)(z.a,{type:"flex",justify:"center",align:"middle",style:{height:"100%"},children:Object(L.jsx)(V.a,{children:e.seriesNames().map((function(t){return Object(L.jsx)(H.a,{value:e.totalRow()[t.key]})}))})})},table:function(t){var e=t.resultSet,n=t.pivotConfig;return Object(L.jsx)(G.a,{pagination:!1,columns:e.tableColumns(n),dataSource:e.tablePivot(n)})}},J=n(47),X=function(t){var e=t.resultSet,n=t.children,r=t.ChartComponent;return Object(L.jsx)(J.l,{width:"100%",height:350,children:Object(L.jsxs)(r,{data:e.chartPivot(),children:[Object(L.jsx)(J.n,{dataKey:"x"}),Object(L.jsx)(J.o,{}),Object(L.jsx)(J.e,{}),n,Object(L.jsx)(J.g,{}),Object(L.jsx)(J.m,{})]})})},Y=["#FF6492","#141446","#7A77FF"],Z={line:function(t){var e=t.resultSet;return Object(L.jsx)(X,{resultSet:e,ChartComponent:J.i,children:e.seriesNames().map((function(t,e){return Object(L.jsx)(J.h,{stackId:"a",dataKey:t.key,name:t.title,stroke:Y[e]},t.key)}))})},bar:function(t){var e=t.resultSet;return Object(L.jsx)(X,{resultSet:e,ChartComponent:J.d,children:e.seriesNames().map((function(t,e){return Object(L.jsx)(J.c,{stackId:"a",dataKey:t.key,name:t.title,fill:Y[e]},t.key)}))})},area:function(t){var e=t.resultSet;return Object(L.jsx)(X,{resultSet:e,ChartComponent:J.b,children:e.seriesNames().map((function(t,e){return Object(L.jsx)(J.a,{stackId:"a",dataKey:t.key,name:t.title,stroke:Y[e],fill:Y[e]},t.key)}))})},pie:function(t){var e=t.resultSet;return Object(L.jsx)(J.l,{width:"100%",height:350,children:Object(L.jsxs)(J.k,{children:[Object(L.jsx)(J.j,{isAnimationActive:!1,data:e.chartPivot(),nameKey:"x",dataKey:e.seriesNames()[0].key,fill:"#8884d8",children:e.chartPivot().map((function(t,e){return Object(L.jsx)(J.f,{fill:Y[e%Y.length]},e)}))}),Object(L.jsx)(J.g,{}),Object(L.jsx)(J.m,{})]})})},number:function(t){var e=t.resultSet;return Object(L.jsx)(z.a,{type:"flex",justify:"center",align:"middle",style:{height:"100%"},children:Object(L.jsx)(V.a,{children:e.seriesNames().map((function(t){return Object(L.jsx)(H.a,{value:e.totalRow()[t.key]})}))})})},table:function(t){var e=t.resultSet,n=t.pivotConfig;return Object(L.jsx)(G.a,{pagination:!1,columns:e.tableColumns(n),dataSource:e.tablePivot(n)})}},$=n(209),tt=["#FF6492","#141446","#7A77FF"],et={maintainAspectRatio:!1},nt={line:function(t){var e=t.resultSet,n={labels:e.categories().map((function(t){return t.category})),datasets:e.series().map((function(t,e){return{label:t.title,data:t.series.map((function(t){return t.value})),borderColor:tt[e],fill:!1}}))},r=Object(_.a)({},et);return Object(L.jsx)($.Line,{data:n,options:r})},bar:function(t){var e=t.resultSet,n={labels:e.categories().map((function(t){return t.category})),datasets:e.series().map((function(t,e){return{label:t.title,data:t.series.map((function(t){return t.value})),backgroundColor:tt[e],fill:!1}}))},r=Object(_.a)(Object(_.a)({},et),{},{scales:{xAxes:[{stacked:!0}]}});return Object(L.jsx)($.Bar,{data:n,options:r})},area:function(t){var e=t.resultSet,n={labels:e.categories().map((function(t){return t.category})),datasets:e.series().map((function(t,e){return{label:t.title,data:t.series.map((function(t){return t.value})),backgroundColor:tt[e]}}))},r=Object(_.a)(Object(_.a)({},et),{},{scales:{yAxes:[{stacked:!0}]}});return Object(L.jsx)($.Line,{data:n,options:r})},pie:function(t){var e=t.resultSet,n={labels:e.categories().map((function(t){return t.category})),datasets:e.series().map((function(t){return{label:t.title,data:t.series.map((function(t){return t.value})),backgroundColor:tt,hoverBackgroundColor:tt}}))},r=Object(_.a)({},et);return Object(L.jsx)($.Pie,{data:n,options:r})},number:function(t){var e=t.resultSet;return Object(L.jsx)(z.a,{type:"flex",justify:"center",align:"middle",style:{height:"100%"},children:Object(L.jsx)(V.a,{children:e.seriesNames().map((function(t){return Object(L.jsx)(H.a,{value:e.totalRow()[t.key]})}))})})},table:function(t){var e=t.resultSet,n=t.pivotConfig;return Object(L.jsx)(G.a,{pagination:!1,columns:e.tableColumns(n),dataSource:e.tablePivot(n)})}},rt=n(55),at=n(537),st=n.n(at);function it(t,e){var n=function(t){var e=Object(o.useRef)([]);return st()(e.current,t)||(e.current=t),e.current}(e);return Object(o.useMemo)(t,n)}var ot=function(t){return t.pivot().map((function(e){var n=e.xValues;return e.yValuesArray.map((function(e){var r=Object(d.a)(e,2),a=r[0],s=r[1];return{x:t.axisValuesString(n,", "),color:t.axisValuesString(a,", "),measure:s&&Number.parseFloat(s)}}))})).reduce((function(t,e){return t.concat(e)}),[])},lt=function(t){var e=t.resultSet,n=it((function(){return ot(e)}),[e]);return Object(L.jsxs)(rt.Chart,{scale:{x:{tickCount:8}},autoFit:!0,height:400,data:n,forceFit:!0,children:[Object(L.jsx)(rt.Axis,{name:"x"}),Object(L.jsx)(rt.Axis,{name:"measure"}),Object(L.jsx)(rt.Tooltip,{crosshairs:{type:"y"}}),Object(L.jsx)(rt.Geom,{type:"line",position:"x*measure",size:2,color:"color"})]})},ct=function(t){var e=t.resultSet,n=it((function(){return ot(e)}),[e.serialize()]);return Object(L.jsxs)(rt.Chart,{scale:{x:{tickCount:8}},autoFit:!0,height:400,data:n,forceFit:!0,children:[Object(L.jsx)(rt.Axis,{name:"x"}),Object(L.jsx)(rt.Axis,{name:"measure"}),Object(L.jsx)(rt.Tooltip,{}),Object(L.jsx)(rt.Geom,{type:"interval",position:"x*measure",color:"color"})]})},ut=function(t){var e=t.resultSet,n=it((function(){return ot(e)}),[e.serialize()]);return Object(L.jsxs)(rt.Chart,{scale:{x:{tickCount:8}},autoFit:!0,height:400,data:n,forceFit:!0,children:[Object(L.jsx)(rt.Axis,{name:"x"}),Object(L.jsx)(rt.Axis,{name:"measure"}),Object(L.jsx)(rt.Tooltip,{crosshairs:{type:"y"}}),Object(L.jsx)(rt.Geom,{type:"area",adjust:"stack",position:"x*measure",size:2,color:"color"})]})},dt=function(t){var e=t.resultSet,n=it((function(){return[e.chartPivot(),e.series()]}),[e]),r=Object(d.a)(n,2),a=r[0],s=r[1];return Object(L.jsx)(rt.PieChart,{data:a,radius:.8,angleField:s[0].key,colorField:"x",label:{visible:!0,offset:20},legend:{position:"bottom"}})},pt=function(t){var e=t.resultSet,n=t.pivotConfig,r=it((function(){return[e.tableColumns(n),e.tablePivot(n)]}),[e,n]),a=Object(d.a)(r,2),s=a[0],i=a[1];return Object(L.jsx)(G.a,{pagination:!1,columns:s,dataSource:i})},mt={line:function(t){var e=t.resultSet;return Object(L.jsx)(lt,{resultSet:e})},bar:function(t){var e=t.resultSet;return Object(L.jsx)(ct,{resultSet:e})},area:function(t){var e=t.resultSet;return Object(L.jsx)(ut,{resultSet:e})},pie:function(t){var e=t.resultSet;return Object(L.jsx)(dt,{resultSet:e})},number:function(t){var e=t.resultSet;return Object(L.jsx)(z.a,{type:"flex",justify:"center",align:"middle",style:{height:"100%"},children:Object(L.jsx)(V.a,{children:e.seriesNames().map((function(t){return Object(L.jsx)(H.a,{value:e.totalRow()[t.key]})}))})})},table:function(t){var e=t.resultSet,n=t.pivotConfig;return Object(L.jsx)(pt,{resultSet:e,pivotConfig:n})}};window.__cubejsPlayground={getCodesandboxFiles:function(t,e){var n=e.query,r=e.pivotConfig,a=e.chartType,s=e.cubejsToken,i=e.apiUrl,o=E["".concat(t,"Charts")],l=o.getCommon,c=o.getImports,u=o.getChartComponent;return{"index.js":"import ReactDOM from 'react-dom';\nimport cubejs from '@cubejs-client/core';\nimport { QueryRenderer } from '@cubejs-client/react';\nimport { Spin } from 'antd';\nimport 'antd/dist/antd.css';\n".concat(c().join("\n"),"\n\n").concat(l(),"\n\nconst cubejsApi = cubejs(\n  '").concat(s,"',\n  { apiUrl: '").concat(i,"' }\n);\n\nconst renderChart = ({ resultSet, error, pivotConfig }) => {\n  if (error) {\n    return <div>{error.toString()}</div>;\n  }\n\n  if (!resultSet) {\n    return <Spin />;\n  }\n\n  ").concat(u(a),"\n};\n\nconst ChartRenderer = () => {\n  return (\n    <QueryRenderer\n      query={").concat(n,"}\n      cubejsApi={cubejsApi}\n      resetResultSetOnChange={false}\n      render={(props) => renderChart({\n        ...props,\n        chartType: '").concat(a,"',\n        pivotConfig: ").concat(r,"\n      })}\n    />\n  );\n};\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<ChartRenderer />, rootElement);\n      ")}},getDependencies:function(t){if(!t)throw new Error("`chartingLibrary` param is undefined");var e=E["".concat(t,"Charts")].getImports;return[].concat(T,Object(f.a)(e().map((function(t){var e=t.match(/['"]([^'"]+)['"]/);return Object(d.a)(e,2)[1]}))))}};var ft={d3:U,recharts:Z,chartjs:nt,bizcharts:mt},ht=function(){var t,e=Object(o.useState)(null),n=Object(d.a)(e,2),r=n[0],a=n[1],s=Object(o.useState)(null),i=Object(d.a)(s,2),l=i[0],c=i[1],u=Object(o.useState)(null),f=Object(d.a)(u,2),h=f[0],b=f[1],g=Object(o.useState)(null),C=Object(d.a)(g,2),j=C[0],y=C[1],x=Object(o.useState)(0),v=Object(d.a)(x,2),S=v[0],O=v[1],k=Object(o.useState)(0),R=Object(d.a)(k,2),A=R[0],w=R[1],F=Object(o.useMemo)((function(){var t=window.parent.window.__cubejsPlayground||{};return Object(p.a)(t.token,{apiUrl:t.apiUrl})}),[S]);return Object(o.useEffect)((function(){var t=(window.parent.window.__cubejsPlayground||{}).onChartRendererReady;"function"===typeof t&&t()}),[]),Object(o.useLayoutEffect)((function(){window.addEventListener("__cubejsPlaygroundEvent",(function(t){var e=t.detail,n=e.query,r=e.chartingLibrary,s=e.chartType,i=e.pivotConfig,o=e.eventType;"chart"===o?(n&&a(n),i&&c(i),r&&b(r),s&&("bizcharts"===r?(y(null),setTimeout((function(){return y(s)}),0)):y(s))):"credentials"===o?O((function(t){return t+1})):"refetch"===o&&w((function(t){return t+1}))}))}),[]),Object(L.jsx)(m.a,{cubejsApi:F,children:Object(L.jsx)("div",{className:"App",children:(null===(t=ft[h])||void 0===t?void 0:t[j])?Object(L.jsx)(B,{renderFunction:ft[h][j],query:r,pivotConfig:l,refetchCounter:A}):null})})},bt=function(t){t&&t instanceof Function&&n.e(3).then(n.bind(null,952)).then((function(e){var n=e.getCLS,r=e.getFID,a=e.getFCP,s=e.getLCP,i=e.getTTFB;n(t),r(t),a(t),s(t),i(t)}))};u.a.render(Object(L.jsx)(l.a.StrictMode,{children:Object(L.jsx)(ht,{})}),document.getElementById("root")),bt()}},[[938,1,2]]]);