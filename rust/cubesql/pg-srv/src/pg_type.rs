#[derive(Debug, Clone, Copy)]
#[repr(u32)]
pub enum PgTypeId {
    UNSPECIFIED = 0,
    BOOL = 16,
    BYTEA = 17,
    NAME = 19,
    INT8 = 20,
    INT2 = 21,
    INT4 = 23,
    TEXT = 25,
    OID = 26,
    TID = 27,
    FLOAT4 = 700,
    FLOAT8 = 701,
    MONEY = 790,
    INET = 869,
    ArrayBool = 1000,
    ArrayBytea = 1001,
    ArrayInt2 = 1005,
    ArrayInt4 = 1007,
    ArrayText = 1009,
    ArrayInt8 = 1016,
    ArrayFloat4 = 1021,
    ArrayFloat8 = 1022,
    BPCHAR = 1042,
    VARCHAR = 1043,
    DATE = 1082,
    TIME = 1083,
    TIMESTAMP = 1114,
    TIMESTAMPTZ = 1184,
    INTERVAL = 1186,
    TIMETZ = 1266,
    NUMERIC = 1700,
    RECORD = 2249,
    ANYARRAY = 2277,
    ANYELEMENT = 2283,
    INT4RANGE = 3904,
    NUMRANGE = 3906,
    TSRANGE = 3908,
    PGLSN = 3220,
    ANYENUM = 3500,
    ANYRANGE = 3831,
    TSTZRANGE = 3910,
    DATERANGE = 3912,
    INT8RANGE = 3926,
    NUMMULTIRANGE = 4532,
    TSMULTIRANGE = 4533,
    DATEMULTIRANGE = 4535,
    INT8MULTIRANGE = 4536,
    INT4MULTIRANGE = 4451,
    CHARACTERDATA = 13408,
    SQLIDENTIFIER = 13410,
}

#[derive(Debug)]
pub struct PgType<'a> {
    pub oid: u32,
    pub typname: &'a str,
    pub typnamespace: u32,
    pub typowner: u32,
    pub typlen: i16,
    pub typbyval: bool,
    pub typtype: &'a str,
    pub typcategory: &'a str,
    pub typisprefered: bool,
    pub typisdefined: bool,
    pub typrelid: u32,
    pub typsubscript: &'static str,
    pub typelem: u32,
    pub typarray: u32,
    pub typalign: &'static str,
    pub typstorage: &'static str,
}

impl PgTypeId {
    pub fn to_type(self) -> &'static PgType<'static> {
        PgType::get_by_tid(self)
    }
}

impl<'a> PgType<'a> {
    pub fn get_by_tid(oid: PgTypeId) -> &'static PgType<'static> {
        match oid {
            PgTypeId::UNSPECIFIED => PG_TYPE_UNSPECIFIED,
            //
            PgTypeId::BOOL => PG_TYPE_BOOL,
            PgTypeId::BYTEA => PG_TYPE_BYTEA,
            PgTypeId::NAME => PG_TYPE_NAME,
            PgTypeId::INT8 => PG_TYPE_INT8,
            PgTypeId::INT2 => PG_TYPE_INT2,
            PgTypeId::INT4 => PG_TYPE_INT4,
            PgTypeId::TEXT => PG_TYPE_TEXT,
            PgTypeId::OID => PG_TYPE_OID,
            PgTypeId::TID => PG_TYPE_TID,
            PgTypeId::FLOAT4 => PG_TYPE_FLOAT4,
            PgTypeId::FLOAT8 => PG_TYPE_FLOAT8,
            PgTypeId::MONEY => PG_TYPE_MONEY,
            PgTypeId::INET => PG_TYPE_INET,
            PgTypeId::ArrayBool => PG_TYPE_ARRAY_BOOL,
            PgTypeId::ArrayBytea => PG_TYPE_ARRAY_BYTEA,
            PgTypeId::ArrayInt2 => PG_TYPE_ARRAY_INT2,
            PgTypeId::ArrayInt4 => PG_TYPE_ARRAY_INT4,
            PgTypeId::ArrayText => PG_TYPE_ARRAY_TEXT,
            PgTypeId::ArrayInt8 => PG_TYPE_ARRAY_INT8,
            PgTypeId::ArrayFloat4 => PG_TYPE_ARRAY_FLOAT4,
            PgTypeId::ArrayFloat8 => PG_TYPE_ARRAY_FLOAT8,
            PgTypeId::BPCHAR => PG_TYPE_BPCHAR,
            PgTypeId::VARCHAR => PG_TYPE_VARCHAR,
            PgTypeId::DATE => PG_TYPE_DATE,
            PgTypeId::TIME => PG_TYPE_TIME,
            PgTypeId::TIMESTAMP => PG_TYPE_TIMESTAMP,
            PgTypeId::TIMESTAMPTZ => PG_TYPE_TIMESTAMPTZ,
            PgTypeId::INTERVAL => PG_TYPE_INTERVAL,
            PgTypeId::TIMETZ => PG_TYPE_TIMETZ,
            PgTypeId::NUMERIC => PG_TYPE_NUMERIC,
            PgTypeId::RECORD => PG_TYPE_RECORD,
            PgTypeId::ANYARRAY => PG_TYPE_ANYARRAY,
            PgTypeId::ANYELEMENT => PG_TYPE_ANYELEMENT,
            PgTypeId::INT4RANGE => PG_TYPE_INT4RANGE,
            PgTypeId::NUMRANGE => PG_TYPE_NUMRANGE,
            PgTypeId::TSRANGE => PG_TYPE_TSRANGE,
            PgTypeId::PGLSN => PG_TYPE_PGLSN,
            PgTypeId::ANYENUM => PG_TYPE_ANYENUM,
            PgTypeId::ANYRANGE => PG_TYPE_ANYRANGE,
            PgTypeId::TSTZRANGE => PG_TYPE_TSTZRANGE,
            PgTypeId::DATERANGE => PG_TYPE_DATERANGE,
            PgTypeId::INT8RANGE => PG_TYPE_INT8RANGE,
            PgTypeId::NUMMULTIRANGE => PG_TYPE_NUMMULTIRANGE,
            PgTypeId::TSMULTIRANGE => PG_TYPE_TSMULTIRANGE,
            PgTypeId::DATEMULTIRANGE => PG_TYPE_DATEMULTIRANGE,
            PgTypeId::INT8MULTIRANGE => PG_TYPE_INT8MULTIRANGE,
            PgTypeId::INT4MULTIRANGE => PG_TYPE_INT4MULTIRANGE,
            PgTypeId::CHARACTERDATA => PG_TYPE_CHARACTER_DATA,
            PgTypeId::SQLIDENTIFIER => PG_TYPE_SQL_IDENTIFIER,
        }
    }

    pub fn get_all() -> Vec<&'static PgType<'static>> {
        vec![
            PG_TYPE_BOOL,
            PG_TYPE_BYTEA,
            PG_TYPE_NAME,
            PG_TYPE_INT8,
            PG_TYPE_INT2,
            PG_TYPE_INT4,
            PG_TYPE_TEXT,
            PG_TYPE_OID,
            PG_TYPE_TID,
            PG_TYPE_FLOAT4,
            PG_TYPE_FLOAT8,
            PG_TYPE_MONEY,
            PG_TYPE_INET,
            PG_TYPE_ARRAY_BOOL,
            PG_TYPE_ARRAY_BYTEA,
            PG_TYPE_ARRAY_INT2,
            PG_TYPE_ARRAY_INT4,
            PG_TYPE_ARRAY_TEXT,
            PG_TYPE_ARRAY_INT8,
            PG_TYPE_ARRAY_FLOAT4,
            PG_TYPE_ARRAY_FLOAT8,
            PG_TYPE_BPCHAR,
            PG_TYPE_VARCHAR,
            PG_TYPE_DATE,
            PG_TYPE_TIME,
            PG_TYPE_TIMESTAMP,
            PG_TYPE_TIMESTAMPTZ,
            PG_TYPE_INTERVAL,
            PG_TYPE_TIMETZ,
            PG_TYPE_NUMERIC,
            PG_TYPE_RECORD,
            PG_TYPE_ANYARRAY,
            PG_TYPE_ANYELEMENT,
            PG_TYPE_INT4RANGE,
            PG_TYPE_NUMRANGE,
            PG_TYPE_TSRANGE,
            PG_TYPE_PGLSN,
            PG_TYPE_ANYENUM,
            PG_TYPE_ANYRANGE,
            PG_TYPE_TSTZRANGE,
            PG_TYPE_DATERANGE,
            PG_TYPE_INT8RANGE,
            PG_TYPE_NUMMULTIRANGE,
            PG_TYPE_TSMULTIRANGE,
            PG_TYPE_DATEMULTIRANGE,
            PG_TYPE_INT8MULTIRANGE,
            PG_TYPE_INT4MULTIRANGE,
            PG_TYPE_CHARACTER_DATA,
            PG_TYPE_SQL_IDENTIFIER,
        ]
    }
}

const PG_TYPE_UNSPECIFIED: &PgType = &PgType {
    oid: PgTypeId::UNSPECIFIED as u32,
    typname: "unspecified",
    typnamespace: 11,
    typowner: 10,
    typlen: 1,
    typbyval: true,
    typtype: "b",
    typcategory: "B",
    typisprefered: true,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "-",
    typstorage: "-",
};

const PG_TYPE_BOOL: &PgType = &PgType {
    oid: PgTypeId::BOOL as u32,
    typname: "bool",
    typnamespace: 11,
    typowner: 10,
    typlen: 1,
    typbyval: true,
    typtype: "b",
    typcategory: "B",
    typisprefered: true,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "c",
    typstorage: "p",
};

const PG_TYPE_INT8: &PgType = &PgType {
    oid: PgTypeId::INT8 as u32,
    typname: "int8",
    typnamespace: 11,
    typowner: 10,
    typlen: 8,
    typbyval: true,
    typtype: "b",
    typcategory: "N",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "d",
    typstorage: "p",
};

const PG_TYPE_BYTEA: &PgType = &PgType {
    oid: PgTypeId::BYTEA as u32,
    typname: "bytea",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "b",
    typcategory: "U",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "i",
    typstorage: "x",
};

const PG_TYPE_INT2: &PgType = &PgType {
    oid: PgTypeId::INT2 as u32,
    typname: "int2",
    typnamespace: 11,
    typowner: 10,
    typlen: 2,
    typbyval: true,
    typtype: "b",
    typcategory: "N",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "s",
    typstorage: "p",
};

const PG_TYPE_INT4: &PgType = &PgType {
    oid: PgTypeId::INT4 as u32,
    typname: "int4",
    typnamespace: 11,
    typowner: 10,
    typlen: 4,
    typbyval: true,
    typtype: "b",
    typcategory: "N",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "i",
    typstorage: "p",
};

const PG_TYPE_TEXT: &PgType = &PgType {
    oid: PgTypeId::TEXT as u32,
    typname: "text",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "b",
    typcategory: "S",
    typisprefered: true,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "i",
    typstorage: "x",
};

const PG_TYPE_DATE: &PgType = &PgType {
    oid: PgTypeId::DATE as u32,
    typname: "date",
    typnamespace: 11,
    typowner: 10,
    typlen: 4,
    typbyval: true,
    typtype: "b",
    typcategory: "D",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "i",
    typstorage: "p",
};

const PG_TYPE_TIMESTAMP: &PgType = &PgType {
    oid: PgTypeId::TIMESTAMP as u32,
    typname: "timestamp",
    typnamespace: 11,
    typowner: 10,
    typlen: 8,
    typbyval: true,
    typtype: "b",
    typcategory: "D",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "d",
    typstorage: "p",
};

const PG_TYPE_TIMESTAMPTZ: &PgType = &PgType {
    oid: PgTypeId::TIMESTAMPTZ as u32,
    typname: "timestamptz",
    typnamespace: 11,
    typowner: 10,
    typlen: 8,
    typbyval: true,
    typtype: "b",
    typcategory: "D",
    typisprefered: true,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "d",
    typstorage: "p",
};

const PG_TYPE_NUMERIC: &PgType = &PgType {
    oid: PgTypeId::NUMERIC as u32,
    typname: "numeric",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "b",
    typcategory: "N",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "i",
    typstorage: "m",
};

const PG_TYPE_INT4RANGE: &PgType = &PgType {
    oid: PgTypeId::INT4RANGE as u32,
    typname: "int4range",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "r",
    typcategory: "R",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "i",
    typstorage: "x",
};

const PG_TYPE_NUMRANGE: &PgType = &PgType {
    oid: PgTypeId::NUMRANGE as u32,
    typname: "numrange",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "r",
    typcategory: "R",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "i",
    typstorage: "x",
};

const PG_TYPE_TSRANGE: &PgType = &PgType {
    oid: PgTypeId::TSRANGE as u32,
    typname: "tsrange",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "r",
    typcategory: "R",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "d",
    typstorage: "x",
};

const PG_TYPE_TSTZRANGE: &PgType = &PgType {
    oid: PgTypeId::TSTZRANGE as u32,
    typname: "tstzrange",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "r",
    typcategory: "R",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "d",
    typstorage: "x",
};

const PG_TYPE_DATERANGE: &PgType = &PgType {
    oid: PgTypeId::DATERANGE as u32,
    typname: "daterange",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "r",
    typcategory: "R",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "i",
    typstorage: "x",
};

const PG_TYPE_INT8RANGE: &PgType = &PgType {
    oid: PgTypeId::INT8RANGE as u32,
    typname: "int8range",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "r",
    typcategory: "R",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "d",
    typstorage: "x",
};

const PG_TYPE_INT4MULTIRANGE: &PgType = &PgType {
    oid: PgTypeId::INT4MULTIRANGE as u32,
    typname: "int4multirange",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "r",
    typcategory: "R",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "i",
    typstorage: "x",
};

const PG_TYPE_NUMMULTIRANGE: &PgType = &PgType {
    oid: PgTypeId::NUMMULTIRANGE as u32,
    typname: "nummultirange",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "m",
    typcategory: "R",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "i",
    typstorage: "x",
};

const PG_TYPE_TSMULTIRANGE: &PgType = &PgType {
    oid: PgTypeId::TSMULTIRANGE as u32,
    typname: "tsmultirange",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "m",
    typcategory: "R",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "d",
    typstorage: "x",
};

const PG_TYPE_DATEMULTIRANGE: &PgType = &PgType {
    oid: PgTypeId::DATEMULTIRANGE as u32,
    typname: "datemultirange",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "m",
    typcategory: "R",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "i",
    typstorage: "x",
};

const PG_TYPE_INT8MULTIRANGE: &PgType = &PgType {
    oid: PgTypeId::INT8MULTIRANGE as u32,
    typname: "int8multirange",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "m",
    typcategory: "R",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "d",
    typstorage: "x",
};

const PG_TYPE_OID: &PgType = &PgType {
    oid: PgTypeId::OID as u32,
    typname: "oid",
    typnamespace: 11,
    typowner: 10,
    typlen: 4,
    typbyval: true,
    typtype: "b",
    typcategory: "N",
    typisprefered: true,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 1028,
    typalign: "i",
    typstorage: "p",
};

const PG_TYPE_TID: &PgType = &PgType {
    oid: PgTypeId::TID as u32,
    typname: "tid",
    typnamespace: 11,
    typowner: 10,
    typlen: 6,
    typbyval: false,
    typtype: "b",
    typcategory: "U",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 1010,
    typalign: "s",
    typstorage: "p",
};

const PG_TYPE_FLOAT4: &PgType = &PgType {
    oid: PgTypeId::FLOAT4 as u32,
    typname: "float4",
    typnamespace: 11,
    typowner: 10,
    typlen: 4,
    typbyval: true,
    typtype: "b",
    typcategory: "N",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 1021,
    typalign: "i",
    typstorage: "p",
};

const PG_TYPE_FLOAT8: &PgType = &PgType {
    oid: PgTypeId::FLOAT8 as u32,
    typname: "float8",
    typnamespace: 11,
    typowner: 10,
    typlen: 8,
    typbyval: true,
    typtype: "b",
    typcategory: "N",
    typisprefered: true,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 1022,
    typalign: "d",
    typstorage: "p",
};

const PG_TYPE_MONEY: &PgType = &PgType {
    oid: PgTypeId::MONEY as u32,
    typname: "money",
    typnamespace: 11,
    typowner: 10,
    typlen: 8,
    typbyval: true,
    typtype: "b",
    typcategory: "N",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 791,
    typalign: "d",
    typstorage: "p",
};

const PG_TYPE_INET: &PgType = &PgType {
    oid: PgTypeId::INET as u32,
    typname: "inet",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "b",
    typcategory: "I",
    typisprefered: true,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 1041,
    typalign: "i",
    typstorage: "m",
};

const PG_TYPE_BPCHAR: &PgType = &PgType {
    oid: PgTypeId::BPCHAR as u32,
    typname: "bpchar",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "b",
    typcategory: "S",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 1014,
    typalign: "i",
    typstorage: "x",
};

const PG_TYPE_TIME: &PgType = &PgType {
    oid: PgTypeId::TIME as u32,
    typname: "time",
    typnamespace: 11,
    typowner: 10,
    typlen: 8,
    typbyval: true,
    typtype: "b",
    typcategory: "D",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 1183,
    typalign: "d",
    typstorage: "p",
};

const PG_TYPE_INTERVAL: &PgType = &PgType {
    oid: PgTypeId::INTERVAL as u32,
    typname: "interval",
    typnamespace: 11,
    typowner: 10,
    typlen: 16,
    typbyval: false,
    typtype: "b",
    typcategory: "T",
    typisprefered: true,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 1187,
    typalign: "d",
    typstorage: "p",
};

const PG_TYPE_TIMETZ: &PgType = &PgType {
    oid: PgTypeId::TIMETZ as u32,
    typname: "timetz",
    typnamespace: 11,
    typowner: 10,
    typlen: 12,
    typbyval: false,
    typtype: "b",
    typcategory: "D",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 1270,
    typalign: "d",
    typstorage: "p",
};

const PG_TYPE_PGLSN: &PgType = &PgType {
    oid: PgTypeId::PGLSN as u32,
    typname: "pg_lsn",
    typnamespace: 11,
    typowner: 10,
    typlen: 8,
    typbyval: true,
    typtype: "b",
    typcategory: "U",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 3221,
    typalign: "d",
    typstorage: "p",
};

const PG_TYPE_RECORD: &PgType = &PgType {
    oid: PgTypeId::RECORD as u32,
    typname: "record",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "p",
    typcategory: "P",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 2287,
    typalign: "d",
    typstorage: "x",
};

const PG_TYPE_ANYARRAY: &PgType = &PgType {
    oid: PgTypeId::ANYARRAY as u32,
    typname: "anyarray",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "p",
    typcategory: "P",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "d",
    typstorage: "x",
};

const PG_TYPE_ANYELEMENT: &PgType = &PgType {
    oid: PgTypeId::ANYELEMENT as u32,
    typname: "anyelement",
    typnamespace: 11,
    typowner: 10,
    typlen: 4,
    typbyval: true,
    typtype: "p",
    typcategory: "P",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "i",
    typstorage: "p",
};

const PG_TYPE_ANYENUM: &PgType = &PgType {
    oid: PgTypeId::ANYENUM as u32,
    typname: "anyenum",
    typnamespace: 11,
    typowner: 10,
    typlen: 4,
    typbyval: true,
    typtype: "p",
    typcategory: "P",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "i",
    typstorage: "p",
};

const PG_TYPE_ANYRANGE: &PgType = &PgType {
    oid: PgTypeId::ANYRANGE as u32,
    typname: "anyrange",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "p",
    typcategory: "P",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "d",
    typstorage: "x",
};

const PG_TYPE_NAME: &PgType = &PgType {
    oid: PgTypeId::NAME as u32,
    typname: "name",
    typnamespace: 11,
    typowner: 10,
    typlen: 64,
    typbyval: false,
    typtype: "b",
    typcategory: "S",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "raw_array_subscript_handler",
    typelem: 0,
    typarray: 0,
    typalign: "c",
    typstorage: "p",
};

const PG_TYPE_VARCHAR: &PgType = &PgType {
    oid: PgTypeId::VARCHAR as u32,
    typname: "varchar",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "b",
    typcategory: "S",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "i",
    typstorage: "x",
};

const PG_TYPE_CHARACTER_DATA: &PgType = &PgType {
    oid: PgTypeId::CHARACTERDATA as u32,
    typname: "character_data",
    typnamespace: 13000,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "d",
    typcategory: "S",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "i",
    typstorage: "x",
};

const PG_TYPE_SQL_IDENTIFIER: &PgType = &PgType {
    oid: PgTypeId::SQLIDENTIFIER as u32,
    typname: "sql_identifier",
    typnamespace: 13000,
    typowner: 10,
    typlen: 64,
    typbyval: false,
    typtype: "d",
    typcategory: "S",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "-",
    typelem: 0,
    typarray: 0,
    typalign: "c",
    typstorage: "p",
};

const PG_TYPE_ARRAY_BOOL: &PgType = &PgType {
    oid: PgTypeId::ArrayBool as u32,
    typname: "_bool",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "b",
    typcategory: "A",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "array_subscript_handler",
    typelem: 16,
    typarray: 0,
    typalign: "i",
    typstorage: "x",
};

const PG_TYPE_ARRAY_BYTEA: &PgType = &PgType {
    oid: PgTypeId::ArrayBytea as u32,
    typname: "_bytea",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "b",
    typcategory: "A",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "array_subscript_handler",
    typelem: 17,
    typarray: 0,
    typalign: "i",
    typstorage: "x",
};

const PG_TYPE_ARRAY_INT2: &PgType = &PgType {
    oid: PgTypeId::ArrayInt2 as u32,
    typname: "_int2",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "b",
    typcategory: "A",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "array_subscript_handler",
    typelem: 21,
    typarray: 0,
    typalign: "i",
    typstorage: "x",
};

const PG_TYPE_ARRAY_INT4: &PgType = &PgType {
    oid: PgTypeId::ArrayInt2 as u32,
    typname: "_int4",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "b",
    typcategory: "A",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "array_subscript_handler",
    typelem: 23,
    typarray: 0,
    typalign: "i",
    typstorage: "x",
};

const PG_TYPE_ARRAY_TEXT: &PgType = &PgType {
    oid: PgTypeId::ArrayText as u32,
    typname: "_text",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "b",
    typcategory: "A",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "array_subscript_handler",
    typelem: 25,
    typarray: 0,
    typalign: "i",
    typstorage: "x",
};

const PG_TYPE_ARRAY_INT8: &PgType = &PgType {
    oid: PgTypeId::ArrayInt8 as u32,
    typname: "_int8",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "b",
    typcategory: "A",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "array_subscript_handler",
    typelem: 20,
    typarray: 0,
    typalign: "d",
    typstorage: "x",
};

const PG_TYPE_ARRAY_FLOAT4: &PgType = &PgType {
    oid: PgTypeId::ArrayFloat4 as u32,
    typname: "_float4",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "b",
    typcategory: "A",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "array_subscript_handler",
    typelem: 700,
    typarray: 0,
    typalign: "i",
    typstorage: "x",
};

const PG_TYPE_ARRAY_FLOAT8: &PgType = &PgType {
    oid: PgTypeId::ArrayFloat8 as u32,
    typname: "_float8",
    typnamespace: 11,
    typowner: 10,
    typlen: -1,
    typbyval: false,
    typtype: "b",
    typcategory: "A",
    typisprefered: false,
    typisdefined: true,
    typrelid: 0,
    typsubscript: "array_subscript_handler",
    typelem: 701,
    typarray: 0,
    typalign: "d",
    typstorage: "x",
};
