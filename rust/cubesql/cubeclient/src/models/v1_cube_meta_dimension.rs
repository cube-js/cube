/*
 * Cube.js
 *
 * Cube.js Swagger Schema
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct V1CubeMetaDimension {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "type")]
    pub r#type: String,
    /// When dimension is defined in View, it keeps the original path: Cube.dimension
    #[serde(rename = "aliasMember", skip_serializing_if = "Option::is_none")]
    pub alias_member: Option<String>,
    #[serde(rename = "granularities", skip_serializing_if = "Option::is_none")]
    pub granularities: Option<Vec<crate::models::V1CubeMetaDimensionGranularity>>,
    #[serde(rename = "meta", skip_serializing_if = "Option::is_none")]
    pub meta: Option<serde_json::Value>,
}

impl V1CubeMetaDimension {
    pub fn new(name: String, r#type: String) -> V1CubeMetaDimension {
        V1CubeMetaDimension {
            name,
            title: None,
            description: None,
            r#type,
            alias_member: None,
            granularities: None,
            meta: None,
        }
    }
}
