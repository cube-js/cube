---
source: cubesql/src/compile/mod.rs
assertion_line: 20871
expression: "execute_query(\"SELECT current_database()        as TABLE_CAT,\\\n                \\nCOALESCE(T.table_schema, MV.schemaname) as TABLE_SCHEM,\\\n                \\nCOALESCE(T.table_name, MV.matviewname)  as TABLE_NAME,\\\n                \\n(CASE\\\n                \\n  WHEN c.reltuples < 0 THEN NULL\\\n                \\n  WHEN c.relpages = 0 THEN float8 '0'\\\n                \\n  ELSE c.reltuples / c.relpages END\\\n                \\n  * (pg_relation_size(c.oid) / pg_catalog.current_setting('block_size')::int)\\\n                \\n)::bigint                               as ROW_COUNT,\\\n                \\nC.relnatts                              as COLUMN_COUNT,\\\n                \\nC.relkind                               as TABLE_KIND,\\\n                \\nC.relispartition                        as IS_PARTITION,\\\n                \\nP.partstrat                             as PARTITION_STRATEGY,\\\n                \\nPC.parition_count                       as PARTITION_COUNT,\\\n                \\nPARTITION.parent_name                   as PARENT_TABLE_NAME,\\\n                \\nPARTITION.parent_table_kind             as PARTITIONED_PARENT_TABLE,\\\n                \\nPARTITION_RANGE.PARTITION_CONSTRAINT    as PARTITION_CONSTRAINT,\\\n                \\nP.partnatts                             as NUMBER_COLUMNS_IN_PART_KEY,\\\n                \\nP.partattrs                             as COLUMNS_PARTICIPATING_IN_PART_KEY,\\\n                \\nCOALESCE(V.definition, MV.definition)   as VIEW_DEFINITION,\\\n                \\nT.*\\\n                \\nFROM pg_class C\\\n                \\n        LEFT JOIN pg_namespace N ON (N.oid = C.relnamespace)\\\n                \\n        LEFT JOIN pg_stat_user_tables PSUT ON (C.oid = PSUT.relid)\\\n                \\n        LEFT JOIN information_schema.tables T ON (C.relname = T.table_name AND N.nspname = T.table_schema)\\\n                \\n        LEFT JOIN pg_views V ON (T.table_name = V.viewname)\\\n                \\n        LEFT JOIN pg_matviews MV ON (C.relname = MV.matviewname)\\\n                \\n        LEFT JOIN pg_partitioned_table P on C.oid = P.partrelid\\\n                \\n        LEFT JOIN (SELECT parent.relname AS table_name,\\\n                \\n                        COUNT(*)       as parition_count\\\n                \\n                    FROM pg_inherits\\\n                \\n                            JOIN pg_class parent ON pg_inherits.inhparent = parent.oid\\\n                \\n                            JOIN pg_class child ON pg_inherits.inhrelid = child.oid\\\n                \\n                            JOIN pg_namespace nmsp_parent ON nmsp_parent.oid = parent.relnamespace\\\n                \\n                            JOIN pg_namespace nmsp_child ON nmsp_child.oid = child.relnamespace\\\n                \\n                    GROUP BY table_name) AS PC ON (C.relname = PC.table_name)\\\n                \\n        LEFT JOIN (SELECT child.relname  AS table_name,\\\n                \\n                        parent.relname AS parent_name,\\\n                \\n                        parent.relispartition AS parent_table_kind\\\n                \\n                    FROM pg_inherits\\\n                \\n                            JOIN pg_class parent ON pg_inherits.inhparent = parent.oid\\\n                \\n                            JOIN pg_class child ON pg_inherits.inhrelid = child.oid\\\n                \\n                            JOIN pg_namespace nmsp_parent ON nmsp_parent.oid = parent.relnamespace\\\n                \\n                            JOIN pg_namespace nmsp_child ON nmsp_child.oid = child.relnamespace\\\n                \\n                    WHERE parent.relkind = 'p') AS PARTITION ON (C.relname = PARTITION.table_name)\\\n                \\n        LEFT JOIN (SELECT c.relname AS PARTITION_NAME, pg_get_expr(c.relpartbound, c.oid, true) AS PARTITION_CONSTRAINT\\\n                \\n                    from pg_class c\\\n                \\n                    where c.relispartition = 'true'\\\n                \\n                    and c.relkind = 'r') AS PARTITION_RANGE ON (C.relname = PARTITION_RANGE.PARTITION_NAME)\\\n                \\nWHERE N.nspname in (SELECT schema_name\\\n                \\n                    FROM INFORMATION_SCHEMA.SCHEMATA\\\n                \\n                    WHERE schema_name not like 'pg_%%'\\\n                \\n                    and schema_name != 'information_schema')\\\n                \\nAND C.relkind != 'i'\\\n                \\nAND C.relkind != 'I'\\\n                \\nORDER BY T.table_name ASC\".to_string(),\n            DatabaseProtocol::PostgreSQL).await?"
---

| TABLE_CAT | TABLE_SCHEM | TABLE_NAME                | ROW_COUNT | COLUMN_COUNT | TABLE_KIND | IS_PARTITION | PARTITION_STRATEGY | PARTITION_COUNT | PARENT_TABLE_NAME | PARTITIONED_PARENT_TABLE | PARTITION_CONSTRAINT | NUMBER_COLUMNS_IN_PART_KEY | COLUMNS_PARTICIPATING_IN_PART_KEY | VIEW_DEFINITION | table_catalog | table_schema | table_name                | table_type | self_referencing_column_name | reference_generation | user_defined_type_catalog | user_defined_type_schema | user_defined_type_name | is_insertable_into | is_typed | commit_action |

| cubedb    | public      | KibanaSampleDataEcommerce | NULL      | 16           | r          | false        | NULL               | NULL            | NULL              | NULL                     | NULL                 | NULL                       | NULL                              | NULL            | cubedb        | public       | KibanaSampleDataEcommerce | BASE TABLE |                              |                      |                           |                          |                        | NO                 | NO       |               |
| cubedb    | public      | Logs                      | NULL      | 7            | r          | false        | NULL               | NULL            | NULL              | NULL                     | NULL                 | NULL                       | NULL                              | NULL            | cubedb        | public       | Logs                      | BASE TABLE |                              |                      |                           |                          |                        | NO                 | NO       |               |
| cubedb    | public      | NumberCube                | NULL      | 3            | r          | false        | NULL               | NULL            | NULL              | NULL                     | NULL                 | NULL                       | NULL                              | NULL            | cubedb        | public       | NumberCube                | BASE TABLE |                              |                      |                           |                          |                        | NO                 | NO       |               |
| cubedb    | public      | WideCube                  | NULL      | 207          | r          | false        | NULL               | NULL            | NULL              | NULL                     | NULL                 | NULL                       | NULL                              | NULL            | cubedb        | public       | WideCube                  | BASE TABLE |                              |                      |                           |                          |                        | NO                 | NO       |               |

