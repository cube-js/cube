---
source: cubesql/src/compile/mod.rs
assertion_line: 4325
expression: "execute_query(\"SELECT\n                    KCU.REFERENCED_TABLE_SCHEMA PKTABLE_CAT,\n                    NULL PKTABLE_SCHEM,\n                    KCU.REFERENCED_TABLE_NAME PKTABLE_NAME,\n                    KCU.REFERENCED_COLUMN_NAME PKCOLUMN_NAME,\n                    KCU.TABLE_SCHEMA FKTABLE_CAT,\n                    NULL FKTABLE_SCHEM,\n                    KCU.TABLE_NAME FKTABLE_NAME,\n                    KCU.COLUMN_NAME FKCOLUMN_NAME,\n                    KCU.POSITION_IN_UNIQUE_CONSTRAINT KEY_SEQ,\n                    CASE update_rule    WHEN 'RESTRICT' THEN 1   WHEN 'NO ACTION' THEN 3   WHEN 'CASCADE' THEN 0   WHEN 'SET NULL' THEN 2   WHEN 'SET DEFAULT' THEN 4 END UPDATE_RULE,\n                    CASE DELETE_RULE WHEN 'RESTRICT' THEN 1  WHEN 'NO ACTION' THEN 3  WHEN 'CASCADE' THEN 0  WHEN 'SET NULL' THEN 2  WHEN 'SET DEFAULT' THEN 4 END DELETE_RULE,\n                    RC.CONSTRAINT_NAME FK_NAME,\n                    NULL PK_NAME,\n                    7 DEFERRABILITY\n                FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU\n                INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS RC ON KCU.CONSTRAINT_SCHEMA = RC.CONSTRAINT_SCHEMA AND KCU.CONSTRAINT_NAME = RC.CONSTRAINT_NAME\n                WHERE (ISNULL(database()) OR (KCU.TABLE_SCHEMA = database())) AND  KCU.TABLE_NAME = 'SlackMessages' ORDER BY PKTABLE_CAT, PKTABLE_SCHEM, PKTABLE_NAME, KEY_SEQ\n                \".to_string()).await?"

---
++
++
++
