---
source: cubesql/src/compile/mod.rs
expression: "execute_query(\"select\t'test'::name as PKTABLE_CAT,\n                n2.nspname as PKTABLE_SCHEM,\n                c2.relname as PKTABLE_NAME,\n                a2.attname as PKCOLUMN_NAME,\n                'test'::name as FKTABLE_CAT,\n                n1.nspname as FKTABLE_SCHEM,\n                c1.relname as FKTABLE_NAME,\n                a1.attname as FKCOLUMN_NAME,\n                i::int2 as KEY_SEQ,\n                case ref.confupdtype\n                    when 'c' then 0::int2\n                    when 'n' then 2::int2\n                    when 'd' then 4::int2\n                    when 'r' then 1::int2\n                    else 3::int2\n                end as UPDATE_RULE,\n                case ref.confdeltype\n                    when 'c' then 0::int2\n                    when 'n' then 2::int2\n                    when 'd' then 4::int2\n                    when 'r' then 1::int2\n                    else 3::int2\n                end as DELETE_RULE,\n                ref.conname as FK_NAME,\n                cn.conname as PK_NAME,\n                case\n                    when ref.condeferrable then\n                        case\n                        when ref.condeferred then 5::int2\n                        else 6::int2\n                        end\n                    else 7::int2\n                end as DEFERRABLITY\n             from\n             ((((((( (select cn.oid, conrelid, conkey, confrelid, confkey,\n                 generate_series(array_lower(conkey, 1), array_upper(conkey, 1)) as i,\n                 confupdtype, confdeltype, conname,\n                 condeferrable, condeferred\n              from pg_catalog.pg_constraint cn,\n                pg_catalog.pg_class c,\n                pg_catalog.pg_namespace n\n              where contype = 'f'\n               and  conrelid = c.oid\n               and  relname = 'KibanaSampleDataEcommerce'\n               and  n.oid = c.relnamespace\n               and  n.nspname = 'public'\n             ) ref\n             inner join pg_catalog.pg_class c1\n              on c1.oid = ref.conrelid)\n             inner join pg_catalog.pg_namespace n1\n              on  n1.oid = c1.relnamespace)\n             inner join pg_catalog.pg_attribute a1\n              on  a1.attrelid = c1.oid\n              and  a1.attnum = conkey[i])\n             inner join pg_catalog.pg_class c2\n              on  c2.oid = ref.confrelid)\n             inner join pg_catalog.pg_namespace n2\n              on  n2.oid = c2.relnamespace)\n             inner join pg_catalog.pg_attribute a2\n              on  a2.attrelid = c2.oid\n              and  a2.attnum = confkey[i])\n             left outer join pg_catalog.pg_constraint cn\n              on cn.conrelid = ref.confrelid\n              and cn.contype = 'p')\n              order by ref.oid, ref.i;\".to_string(),\n            DatabaseProtocol::PostgreSQL).await?"
---
+-------------+---------------+--------------+---------------+-------------+---------------+--------------+---------------+---------+-------------+-------------+---------+---------+--------------+
| PKTABLE_CAT | PKTABLE_SCHEM | PKTABLE_NAME | PKCOLUMN_NAME | FKTABLE_CAT | FKTABLE_SCHEM | FKTABLE_NAME | FKCOLUMN_NAME | KEY_SEQ | UPDATE_RULE | DELETE_RULE | FK_NAME | PK_NAME | DEFERRABLITY |
+-------------+---------------+--------------+---------------+-------------+---------------+--------------+---------------+---------+-------------+-------------+---------+---------+--------------+
+-------------+---------------+--------------+---------------+-------------+---------------+--------------+---------------+---------+-------------+-------------+---------+---------+--------------+
