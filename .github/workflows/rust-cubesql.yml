name: Build native

on:
  push:
    paths:
      - '.github/workflows/rust-cubesql.yml'
      - 'packages/cubejs-backend-native/**'
      - 'rust/cubesql/**'
      - 'rust/cubesql/**'
    branches:
      - 'master'
  pull_request:
    paths:
      - '.github/workflows/rust-cubesql.yml'
      - 'packages/cubejs-backend-native/**'
      - 'rust/cubesql/**'
      - 'rust/cubesql/**'

jobs:
  precheck:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    name: Check fmt/clippy

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-07-04
          override: true
          components: rustfmt, clippy
      - name: Lint CubeSQL
        run: cd rust/cubesql/cubesql && cargo fmt --all -- --check
      - name: Lint Native
        run: cd packages/cubejs-backend-native && cargo fmt --all -- --check
      - name: Clippy Native
        run: cd packages/cubejs-backend-native && cargo clippy -- -D warnings
      # CubeSQL is not ready for Clippy
      #- name: Clippy CubeSQL
      #  run: cd rust/cubesql && cargo clippy -- -D warnings

  native_linux:
    needs: [precheck]
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    name: Build Linux GNU ${{ matrix.node-version }}.x ${{ matrix.target }} 
    strategy:
      matrix:
        node-version: [12, 14, 16, 17]
        target: ["x86_64-unknown-linux-gnu", "aarch64-unknown-linux-gnu"]
      fail-fast: false
    container:
      image: cubejs/rust-cross:${{ matrix.target }}-10052021

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-07-04
          override: true
          components: rustfmt
          target: ${{ matrix.target }}
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore lerna
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
            rust/cubesql/node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-workspace-main-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-workspace-main-${{ matrix.node-version }}-
      - name: Install Yarn
        run: npm install -g yarn
      - name: Set Yarn version
        run: yarn policies set-version v1.22.5
      - name: Yarn install
        run: CUBESTORE_SKIP_POST_INSTALL=true yarn install --frozen-lockfile
      - name: Build native
        env:
          CARGO_BUILD_TARGET: ${{ matrix.target }}
        run: cd packages/cubejs-backend-native && yarn run native:build
      - name: Test native
        if: (matrix.target == 'x86_64-unknown-linux-gnu')
        env:
          CUBEJS_NATIVE_INTERNAL_DEBUG: true
        run: cd packages/cubejs-backend-native && yarn run test:unit

  native:
    needs: [precheck]
    runs-on: ${{ matrix.os-version }}
    timeout-minutes: 60
    name: Build ${{ matrix.os-version }} ${{ matrix.node-version }}

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x, 17.x]
        os-version: [windows-2019, macos-11]
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-07-04
          override: true
          components: rustfmt
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore lerna
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
            rust/cubesql/node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-workspace-main-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-workspace-main-${{ matrix.node-version }}-
      - name: Set Yarn version
        run: yarn policies set-version v1.22.5
      - name: Yarn install
        env:
          CUBESTORE_SKIP_POST_INSTALL: true
        run: yarn install --frozen-lockfile
      - name: Build native
        env:
          CUBEJS_NATIVE_INTERNAL_DEBUG: true
        run: cd packages/cubejs-backend-native && yarn run native:build && yarn run test:unit
